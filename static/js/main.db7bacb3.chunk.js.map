{"version":3,"sources":["styles.js","config.js","helpers.js","App.js","index.js"],"names":["Container","styled","div","MenuContainer","SelectContainer","Header","h5","SwatchContainer","props","disabled","Swatch","color","isPicked","Pattern","PatternContainer","PatternLabel","h6","Button","button","ButtonContainer","Stripe","PatternCountContainer","PatternCount","p","selectStyles","control","provided","_","cursor","option","colors","label","value","stripeOptions","numbersToLetters","0","1","2","3","colorSequences","4","5","6","7","8","9","createMagnitudeOptions","start","options","Number","i","push","PatternRenderer","memo","columnIndex","data","rowIndex","otherProps","currentPattern","pattern","flatMap","count","Array","fill","App","useState","stripeCount","setStripeCount","magnitude","setMagnitude","magnitudeOptions","setMagnitudeOptions","pickedColors","setPickedColors","patterns","setPatterns","patternCount","setPatternCount","randomMode","useRef","useEffect","current","createPatterns","stripeCountValue","isColorCountValid","length","anyChoicesMade","allChoicesMade","numberPalindromes","createNumberPalindromes","stripes","results","forEach","middle","concat","sequences","j","map","toString","k","join","num","converted","array","result","slice","convertTo2D","Math","floor","random","updatePickedColors","newColor","newPickedColors","find","filter","pop","styles","onChange","isDisabled","key","onClick","pickedColor","randomStripeCount","colorCount","min","colorIdx","includes","itemData","columnCount","rowCount","columnWidth","height","rowHeight","width","ReactDOM","render","document","getElementById"],"mappings":"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AG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAErBC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAGvBM,EAAG,CACDP,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAExBC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAG1BO,EAAG,CACDT,EAAG,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7BC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE3BC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MCnUlBQ,EAAyB,SAAAC,GACpC,IAAIC,EAAU,GAGd,IAFAD,EAAQE,OAAOF,IAEH,IAAM,EAChB,IAAK,IAAIG,EAAIH,EAAOG,GDPI,GCOeA,GAAK,EAC1CF,EAAQG,KAAK,CAAEnB,MAAOkB,EAAGnB,MAAOmB,SAGlC,IAAK,IAAIA,EAAIH,EAAOG,GDXI,GCWeA,IACrCF,EAAQG,KAAK,CAAEnB,MAAOkB,EAAGnB,MAAOmB,IAGpC,OAAOF,G,oOCkBT,IAAMI,EAAkBC,gBAAK,SAAA7C,GAAU,IAC7B8C,EAA+C9C,EAA/C8C,YAAaC,EAAkC/C,EAAlC+C,KAAMC,EAA4BhD,EAA5BgD,SAAaC,EADJ,YACmBjD,EADnB,mCAE9BkD,EAAiBH,EAAKC,GAAUF,GAEtC,OAAOI,EACL,kBAAC5C,EAAqB2C,EACpB,kBAAC1C,EAAD,KAAe2C,EAAe3B,OAC9B,kBAAClB,EAAD,KACG6C,EAAeC,QAAQC,SAAQ,gBAAGC,EAAH,EAAGA,MAAOlD,EAAV,EAAUA,MAAV,OAC9B,IAAImD,MAAMD,GAAOE,KAAK,kBAAC3C,EAAD,CAAQT,MAAOA,EAAMqB,cAI/C,QA0MSgC,EAvMH,WAAO,IAAD,EACsBC,mBAAS,MAD/B,mBACTC,EADS,KACIC,EADJ,OAEkBF,mBAAS,MAF3B,mBAETG,EAFS,KAEEC,EAFF,OAGgCJ,mBAAS,MAHzC,mBAGTK,EAHS,KAGSC,EAHT,OAIwBN,mBAAS,IAJjC,mBAITO,EAJS,KAIKC,EAJL,OAKgBR,mBAAS,IALzB,mBAKTS,EALS,KAKCC,EALD,OAMwBV,mBAAS,GANjC,mBAMTW,EANS,KAMKC,EANL,KAQVC,EAAaC,kBAAO,GAE1BC,qBAAU,WACJF,EAAWG,UACbC,IACAJ,EAAWG,SAAU,MAIzB,IAAME,EAAmBjB,EAAcjB,OAAOiB,EAAYlC,OAAS,KAC7DoD,EACJD,EAAmB,IAAM,EACrBX,EAAaa,OAAS,GAAKF,GAAoBX,EAAaa,OAC5Db,EAAaa,OAAS,GAAKF,GAAoBX,EAAaa,OAC5DC,EAAiBH,GAAoBf,GAAagB,EAClDG,EAAiBJ,GAAoBf,GAAagB,EAElDF,EAAiB,WAQrB,IAPA,IAAMM,EDzD6B,SAA1BC,EAA2BC,EAAStB,GAC/C,IAAIuB,EAAU,GAEd,GAAgB,IAAZD,GAAiBtB,EAAY,EAC/BuB,EAAQxC,KAAK,CAACiB,SACT,GAAgB,IAAZsB,GAAiBtB,EAAY,IAAM,GAAKA,EAAY,EAC7DuB,EAAQxC,KAAK,CAACiB,EAAY,EAAGA,EAAY,SACpC,GAAI,EAAIsB,GAAWA,GAAWtB,EACnC,IAD+C,IAAD,WACrClB,GACSuC,EAAwBC,EAAU,EAAGtB,EAAY,EAAIlB,GAC7D0C,SAAQ,SAAAC,GAAM,OAAIF,EAAQxC,KAAK,CAACD,GAAG4C,OAAOD,EAAQ,CAAC3C,SAFpDA,EAAI,EAAGA,GAAKkB,EAAY,EAAGlB,IAAM,EAAjCA,GAKX,OAAOyC,EC4CqBF,CACxBN,EACAf,GAEI2B,EAAYxD,EAAe4C,GAAkBX,EAAaa,QAC1DM,EAAU,GAEPzC,EAAI,EAAGA,EAAIsC,EAAkBH,OAAQnC,IAC5C,IAAK,IAAI8C,EAAI,EAAGA,EAAID,EAAUV,OAAQW,IAAK,CAQzC,IAPA,IAAIrC,EAAUoC,EAAUC,GAAGC,KAAI,SAAAtF,GAC7B,OAAc,IAAVA,EACK,CAAEA,MAAO,CAAEoB,MAAO,QAASC,MAAO,YAElC,CAAErB,MAAO6D,GAAc7D,EAAQ,GAAGuF,gBAGpCC,EAAI,EAAGA,EAAIX,EAAkBtC,GAAGmC,OAAQc,IAC/CxC,EAAQwC,GAAR,MAAsBX,EAAkBtC,GAAGiD,GAE7CR,EAAQxC,KAAK,CACXpB,MAAM,GAAD,OAAKoD,EAAL,YAAyBf,EAAzB,aAAuCoB,EAAkBtC,GAAGkD,KAC/D,KADG,aAECL,EAAUC,GAAGC,KAAI,SAAAI,GAAG,OAAInE,EAAiBmE,MAAMD,KAAK,KAC1DzC,YAKN,IAAM2C,EDrEiB,SAAAC,GAIzB,IAHA,IAAIC,EAAS,GACTtD,EAAI,EAEDA,EAAIqD,EAAMlB,QACfmB,EAAOrD,KAAKoD,EAAME,MAAMvD,EAAGA,EAAI,IAC/BA,GAAK,EAEP,OAAOsD,EC6DaE,CAAYf,GAE1Bb,EAAWG,SACbJ,EAAgB,GAChBF,EAAY,CAAC,CAACgB,EAAQgB,KAAKC,MAAMD,KAAKE,SAAWlB,EAAQN,cAEzDR,EAAgBc,EAAQN,QACxBV,EAAY2B,KAIVQ,GAAqB,SAAAC,GACzB,IAAIC,EAAkBxC,EAAayB,KAAI,SAAAtF,GAAK,O,yVAAA,IAAUA,MAElD6D,EAAayC,MAAK,SAAAtG,GAAK,OAAIA,EAAMqB,QAAU+E,EAAS/E,SACtDgF,EAAkBxC,EAAa0C,QAC7B,SAAAvG,GAAK,OAAIA,EAAMqB,QAAU+E,EAAS/E,UAIlCwC,EAAaa,SAAWF,GACA,IAAxBX,EAAaa,QAEb2B,EAAgBG,MAElBH,EAAgB7D,KAAK4D,IAGvBtC,EAAgBuC,IAqClB,OACE,kBAAChH,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,gBACA,kBAAC,IAAD,CACE+G,OAAQ5F,EACRQ,MAAOkC,EACPlB,QAASf,EACToF,SAAU,SAAAxF,GACRsC,EAAetC,GACfwC,EAAa,MACbI,EAAgB,IAChBF,EAAoBzB,EAAuBjB,EAAOG,YAIxD,kBAAC5B,EAAD,KACE,kBAACC,EAAD,kBACA,kBAAC,IAAD,CACE+G,OAAQ5F,EACR8F,YAAahD,EACbtB,QAASsB,EACTtC,MAAOoC,GAAa,CAAEpC,MAAOoC,EAAWrC,MAAOqC,GAC/CiD,SAAU,SAAAxF,GACRwC,EAAapB,OAAOpB,EAAOG,YAIjC,kBAACzB,EAAD,CAAiBE,WAAY0E,GAAoBf,IAC9CtC,EAAOmE,KAAI,SAAAtF,GACV,OACE,kBAACD,EAAD,CACE6G,IAAKZ,KAAKE,SACVlG,MAAOA,EAAMqB,MACbwF,QAAS,kBAAMV,GAAmBnG,IAClCC,WACI4D,EAAayC,MACb,SAAAQ,GAAW,OAAIA,EAAYzF,QAAUrB,EAAMqB,eAOvD,kBAACb,EAAD,KACE,kBAACF,EAAD,CAAQuG,QAAStC,EAAgBzE,UAAW8E,GAA5C,oBAIF,kBAACpE,EAAD,KACE,kBAACF,EAAD,CAAQuG,QA5ED,WASb,IARA,IAAME,EAAoBf,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EACpD7D,EAAUF,EAAuB4E,GACjCC,EACJD,EAAoB,IAAM,EACtB,EACAf,KAAKC,MAAMD,KAAKE,SAAWF,KAAKiB,IAAIF,EAAmB,IAAM,EAC/D/B,EAAU,GACVzC,EAAI,EACDA,EAAIyE,GAAY,CACrB,IAAME,EAAWlB,KAAKC,MAAMD,KAAKE,SAAW/E,EAAOuD,QAC9CM,EAAQmC,SAAShG,EAAO+F,MAC3BlC,EAAQxC,KAAKrB,EAAO+F,IACpB3E,KAGJiB,EAAe,CAAEnC,MAAO0F,EAAmB3F,MAAO2F,IAClDnD,EAAoBvB,GACpBqB,EACEpB,OAAOD,EAAQ2D,KAAKC,MAAMD,KAAKE,SAAW7D,EAAQqC,SAASrD,QAE7DyC,EAAgBkB,GAChBb,EAAWG,SAAU,IAsDf,mBAEF,kBAAC9D,EAAD,KACE,kBAACF,EAAD,CAAQuG,QAxFF,WACZrD,EAAe,MACfE,EAAa,MACbE,EAAoB,MACpBE,EAAgB,IAChBE,EAAY,IACZE,EAAgB,IAkFcpE,UAAW6E,GAAnC,UAIF,kBAACjE,EAAD,KACE,kBAAChB,EAAD,2BACA,kBAACiB,EAAD,KAAesD,KAGlBF,EAASW,OAAS,GACjB,kBAAC,IAAD,CACE0C,SAAUrD,EACVsD,YAAatD,EAAS,GAAGW,OACzB4C,SAAUvD,EAASW,OACnB6C,YAAa,IACbC,OAAQ,IACRC,UAAW,IACXC,MAAO,KAENjF,KC7OXkF,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.db7bacb3.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-start;\n  margin-top: 20px;\n`;\n\nexport const MenuContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 20px;\n  width: 120px;\n`;\n\nexport const SelectContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Header = styled.h5`\n  font-weight: 500;\n  margin: 0 0 5px 0;\n  padding: 0;\n`;\n\nexport const SwatchContainer = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-wrap: wrap;\n\n  ${props =>\n    props.disabled &&\n    `\n  pointer-events: none;\n  opacity: 0.5;\n  `}\n`;\n\nexport const Swatch = styled.div`\n  background: ${props => props.color};\n  border: 2px solid ${props => (props.isPicked ? `limegreen` : `white`)};\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n`;\n\nexport const Pattern = styled.div`\n  width: 200px;\n`;\n\nexport const PatternContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 10px;\n  height: fit-content;\n`;\n\nexport const PatternLabel = styled.h6`\n  font-weight: 400;\n  margin: 0 0 5px 0;\n  padding: 0;\n`;\n\nexport const Button = styled.button`\n  ${props =>\n    !props.disabled &&\n    `\n    cursor: pointer;\n  `}\n`;\n\nexport const ButtonContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nexport const Stripe = styled.div`\n  background: ${props => props.color};\n  height: 5px;\n`;\n\nexport const PatternCountContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const PatternCount = styled.p`\n  font-weight: 500;\n  font-size: 24px;\n  margin: 0 0 5px 0;\n  padding: 0;\n`;\n\nexport const selectStyles = {\n  control: (provided, _) => ({\n    ...provided,\n    cursor: \"pointer\"\n  }),\n  option: (provided, _) => ({\n    ...provided,\n    cursor: \"pointer\"\n  })\n};\n","export const maxMagnitude = 16;\n\nexport const colors = [\n  { label: \"maroon\", value: \"#7c252a\" },\n  { label: \"red\", value: \"#d73931\" },\n  { label: \"orange\", value: \"#ea4d38\" },\n  { label: \"yellow\", value: \"#f3ad45\" },\n  { label: \"yellow gold\", value: \"#f1bf48\" },\n  { label: \"muted gold\", value: \"#cc8b37\" },\n  { label: \"green\", value: \"#335526\" },\n  { label: \"teal\", value: \"#489da7\" },\n  { label: \"powder blue\", value: \"#6cace4\" },\n  { label: \"royal blue\", value: \"#144ea8\" },\n  { label: \"navy blue\", value: \"#13294b\" },\n  { label: \"purple\", value: \"#523178\" },\n  { label: \"white\", value: \"#f6f7f4\" },\n  { label: \"gray\", value: \"#999999\" },\n  { label: \"black\", value: \"#212322\" }\n];\n\nexport const stripeOptions = [\n  { value: \"1\", label: \"1\" },\n  { value: \"2\", label: \"2\" },\n  { value: \"3\", label: \"3\" },\n  { value: \"4\", label: \"4\" },\n  { value: \"5\", label: \"5\" },\n  { value: \"6\", label: \"6\" },\n  { value: \"7\", label: \"7\" },\n  { value: \"8\", label: \"8\" },\n  { value: \"9\", label: \"9\" }\n];\n\nexport const numbersToLetters = {\n  0: \"X\",\n  1: \"A\",\n  2: \"B\",\n  3: \"C\"\n};\n\nexport const lettersToNumbers = {\n  X: 0,\n  A: 1,\n  B: 2,\n  C: 3\n};\n\nexport const colorSequences = {\n  1: { 1: [[1]] },\n  2: {\n    2: [\n      [1, 2],\n      [2, 1]\n    ]\n  },\n  3: {\n    1: [[1, 0, 1]],\n    2: [\n      [1, 2, 1],\n      [2, 1, 2],\n      [1, 0, 2],\n      [2, 0, 1]\n    ],\n    3: [\n      [1, 2, 3],\n      [1, 3, 2],\n      [2, 1, 3],\n      [2, 3, 1],\n      [3, 1, 2],\n      [3, 2, 1]\n    ]\n  },\n  4: {\n    2: [\n      [1, 2, 1, 2],\n      [2, 1, 2, 1]\n    ],\n    3: [\n      [1, 2, 3, 1],\n      [1, 3, 2, 1],\n      [2, 1, 3, 2],\n      [2, 3, 1, 2],\n      [3, 1, 2, 3],\n      [3, 2, 1, 3]\n    ]\n  },\n  5: {\n    1: [[1, 0, 1, 0, 1]],\n    2: [\n      [1, 0, 2, 0, 1],\n      [2, 0, 1, 0, 2],\n      [1, 2, 0, 2, 1],\n      [2, 1, 0, 1, 2],\n      [1, 2, 1, 2, 1],\n      [2, 1, 2, 1, 2]\n    ],\n    3: [\n      [1, 2, 3, 2, 1],\n      [1, 3, 2, 3, 1],\n      [2, 1, 3, 1, 2],\n      [2, 3, 1, 3, 2],\n      [3, 1, 2, 1, 3],\n      [3, 2, 1, 2, 3],\n      [1, 0, 2, 0, 3],\n      [1, 0, 3, 0, 2],\n      [2, 0, 1, 0, 3],\n      [2, 0, 3, 0, 1],\n      [3, 0, 1, 0, 2],\n      [3, 0, 2, 0, 1]\n    ]\n  },\n  6: {\n    2: [\n      [1, 0, 1, 2, 0, 2],\n      [1, 0, 2, 1, 0, 2],\n      [2, 0, 1, 2, 0, 1],\n      [2, 0, 2, 1, 0, 1],\n      [1, 2, 1, 2, 1, 2],\n      [2, 1, 2, 1, 2, 1]\n    ],\n    3: [\n      [1, 0, 2, 3, 0, 1],\n      [1, 0, 3, 2, 0, 1],\n      [2, 0, 1, 3, 0, 2],\n      [2, 0, 3, 1, 0, 2],\n      [3, 0, 1, 2, 0, 3],\n      [3, 0, 2, 1, 0, 3],\n      [1, 2, 3, 1, 2, 3],\n      [1, 3, 2, 1, 3, 2],\n      [2, 1, 3, 2, 1, 3],\n      [2, 3, 1, 2, 3, 1],\n      [3, 1, 2, 3, 1, 2],\n      [3, 2, 1, 3, 2, 1]\n    ]\n  },\n  7: {\n    1: [[1, 0, 1, 0, 1, 0, 1]],\n    2: [\n      [1, 0, 2, 0, 2, 0, 1],\n      [2, 0, 1, 0, 1, 0, 2],\n      [1, 0, 1, 2, 1, 0, 1],\n      [1, 0, 2, 1, 2, 0, 1],\n      [2, 0, 1, 2, 1, 0, 2],\n      [2, 0, 2, 1, 2, 0, 2],\n      [1, 2, 0, 1, 0, 2, 1],\n      [1, 2, 0, 2, 0, 2, 1],\n      [2, 1, 0, 1, 0, 1, 2],\n      [2, 1, 0, 2, 0, 1, 2],\n      [1, 2, 1, 0, 1, 2, 1],\n      [2, 1, 2, 0, 2, 1, 2],\n      [1, 2, 1, 2, 1, 2, 1],\n      [2, 1, 2, 1, 2, 1, 2],\n      [1, 0, 2, 0, 1, 0, 2],\n      [2, 0, 1, 0, 2, 0, 1]\n    ],\n    3: [\n      [1, 0, 2, 3, 2, 0, 1],\n      [1, 0, 3, 2, 3, 0, 1],\n      [2, 0, 1, 3, 1, 0, 2],\n      [2, 0, 3, 1, 3, 0, 2],\n      [3, 0, 1, 2, 1, 0, 3],\n      [3, 0, 2, 1, 2, 0, 3],\n      [1, 2, 0, 3, 0, 2, 1],\n      [1, 3, 0, 2, 0, 3, 1],\n      [2, 1, 0, 3, 0, 1, 2],\n      [2, 3, 0, 1, 0, 3, 2],\n      [3, 1, 0, 2, 0, 1, 3],\n      [3, 2, 0, 1, 0, 2, 3],\n      [1, 2, 3, 0, 3, 2, 1],\n      [1, 3, 2, 0, 2, 3, 1],\n      [2, 1, 3, 0, 3, 1, 2],\n      [2, 3, 1, 0, 1, 3, 2],\n      [3, 1, 2, 0, 2, 1, 3],\n      [3, 2, 1, 0, 1, 2, 3],\n      [1, 2, 1, 3, 1, 2, 1],\n      [1, 3, 1, 2, 1, 3, 1],\n      [2, 1, 2, 3, 2, 1, 2],\n      [2, 3, 2, 1, 2, 3, 2],\n      [3, 1, 3, 2, 3, 1, 3],\n      [3, 2, 3, 1, 3, 2, 3],\n      [1, 2, 3, 1, 3, 2, 1],\n      [1, 2, 3, 2, 3, 2, 1],\n      [1, 3, 2, 1, 2, 3, 1],\n      [1, 3, 2, 3, 2, 3, 1],\n      [2, 1, 3, 1, 3, 1, 2],\n      [2, 1, 3, 2, 3, 1, 2],\n      [2, 3, 1, 2, 1, 3, 2],\n      [2, 3, 1, 3, 1, 3, 2],\n      [3, 1, 2, 1, 2, 1, 3],\n      [3, 1, 2, 3, 2, 1, 3],\n      [3, 2, 1, 2, 1, 2, 3],\n      [3, 2, 1, 3, 1, 2, 3]\n    ]\n  },\n  8: {\n    2: [\n      [1, 2, 0, 1, 2, 0, 1, 2],\n      [2, 1, 0, 2, 1, 0, 2, 1],\n      [1, 2, 1, 2, 1, 2, 1, 2],\n      [2, 1, 2, 1, 2, 1, 2, 1]\n    ],\n    3: [\n      [1, 0, 2, 3, 2, 3, 0, 1],\n      [1, 0, 3, 2, 3, 2, 0, 1],\n      [2, 0, 1, 3, 1, 3, 0, 2],\n      [2, 0, 3, 1, 3, 1, 0, 2],\n      [3, 0, 1, 2, 1, 2, 0, 3],\n      [3, 0, 2, 1, 2, 1, 0, 3]\n    ]\n  },\n  9: {\n    1: [[1, 0, 1, 0, 1, 0, 1, 0, 1]],\n    2: [\n      [1, 0, 1, 0, 2, 0, 1, 0, 1],\n      [1, 0, 2, 0, 1, 0, 2, 0, 1],\n      [1, 0, 2, 0, 2, 0, 2, 0, 1],\n      [2, 0, 1, 0, 1, 0, 1, 0, 2],\n      [2, 0, 1, 0, 2, 0, 1, 0, 2],\n      [2, 0, 2, 0, 1, 0, 2, 0, 2],\n      [1, 0, 1, 2, 0, 2, 1, 0, 1],\n      [1, 0, 2, 1, 0, 1, 2, 0, 1],\n      [2, 0, 1, 2, 0, 2, 1, 0, 2],\n      [2, 0, 2, 1, 0, 1, 2, 0, 2],\n      [1, 0, 1, 2, 1, 2, 1, 0, 1],\n      [1, 0, 2, 1, 2, 1, 2, 0, 1],\n      [2, 0, 1, 2, 1, 2, 1, 0, 1],\n      [2, 0, 2, 1, 2, 1, 2, 0, 1],\n      [1, 2, 0, 1, 0, 1, 0, 2, 1],\n      [1, 2, 0, 2, 0, 2, 0, 2, 1],\n      [2, 1, 0, 1, 0, 1, 0, 1, 2],\n      [2, 1, 0, 2, 0, 2, 0, 1, 2],\n      [1, 2, 0, 1, 2, 1, 0, 2, 1],\n      [1, 2, 0, 2, 1, 2, 0, 2, 1],\n      [2, 1, 0, 1, 2, 1, 0, 1, 2],\n      [2, 1, 0, 2, 1, 2, 0, 1, 2],\n      [1, 2, 1, 0, 1, 0, 1, 2, 1],\n      [1, 2, 1, 0, 2, 0, 1, 2, 1],\n      [2, 1, 2, 0, 1, 0, 2, 1, 2],\n      [2, 1, 2, 0, 2, 0, 2, 1, 2],\n      [1, 2, 1, 2, 0, 2, 1, 2, 1],\n      [2, 1, 2, 1, 0, 1, 2, 1, 2],\n      [1, 2, 1, 2, 1, 2, 1, 2, 1],\n      [2, 1, 2, 1, 2, 1, 2, 1, 2],\n      [1, 0, 2, 1, 0, 2, 1, 0, 2],\n      [2, 0, 1, 2, 0, 1, 2, 0, 1],\n      [1, 2, 0, 1, 0, 2, 0, 1, 2],\n      [2, 1, 0, 2, 0, 1, 0, 2, 1]\n    ],\n    3: [\n      [1, 0, 2, 0, 3, 0, 2, 0, 1],\n      [1, 0, 3, 0, 2, 0, 3, 0, 1],\n      [2, 0, 1, 0, 3, 0, 1, 0, 2],\n      [2, 0, 3, 0, 1, 0, 3, 0, 2],\n      [3, 0, 1, 0, 2, 0, 1, 0, 3],\n      [3, 0, 2, 0, 1, 0, 2, 0, 3],\n      [1, 0, 2, 3, 0, 3, 2, 0, 1],\n      [1, 0, 3, 2, 0, 2, 3, 0, 1],\n      [2, 0, 1, 3, 0, 3, 1, 0, 2],\n      [2, 0, 3, 1, 0, 1, 3, 0, 2],\n      [3, 0, 1, 2, 0, 2, 1, 0, 3],\n      [3, 0, 2, 1, 0, 1, 2, 0, 3],\n      [1, 0, 2, 3, 1, 3, 2, 0, 1],\n      [1, 0, 2, 3, 2, 3, 2, 0, 1],\n      [1, 0, 3, 2, 1, 2, 3, 0, 1],\n      [1, 0, 3, 2, 3, 2, 3, 0, 1],\n      [2, 0, 1, 3, 1, 3, 1, 0, 2],\n      [2, 0, 1, 3, 2, 3, 1, 0, 2],\n      [2, 0, 3, 1, 2, 1, 3, 0, 2],\n      [2, 0, 3, 1, 3, 1, 3, 0, 2],\n      [3, 0, 1, 2, 1, 2, 1, 0, 3],\n      [3, 0, 1, 2, 3, 2, 1, 0, 3],\n      [3, 0, 2, 1, 2, 1, 2, 0, 3],\n      [3, 0, 2, 1, 3, 1, 2, 0, 3],\n      [1, 2, 0, 1, 3, 1, 0, 2, 1],\n      [1, 2, 0, 2, 3, 2, 0, 2, 1],\n      [1, 2, 0, 3, 1, 3, 0, 2, 1],\n      [1, 2, 0, 3, 2, 3, 0, 2, 1],\n      [1, 3, 0, 1, 2, 1, 0, 3, 1],\n      [1, 3, 0, 2, 1, 2, 0, 3, 1],\n      [1, 3, 0, 2, 3, 2, 0, 3, 1],\n      [1, 3, 0, 3, 2, 3, 0, 3, 1],\n      [2, 1, 0, 1, 3, 1, 0, 1, 2],\n      [2, 1, 0, 2, 3, 2, 0, 1, 2],\n      [2, 1, 0, 3, 1, 3, 0, 1, 2],\n      [2, 1, 0, 3, 2, 3, 0, 1, 2],\n      [2, 3, 0, 1, 2, 1, 0, 3, 2],\n      [2, 3, 0, 1, 3, 1, 0, 3, 2],\n      [2, 3, 0, 2, 1, 2, 0, 3, 2],\n      [2, 3, 0, 3, 1, 3, 0, 3, 2],\n      [3, 1, 0, 1, 2, 1, 0, 1, 3],\n      [3, 1, 0, 2, 1, 2, 0, 1, 3],\n      [3, 1, 0, 2, 3, 2, 0, 1, 3],\n      [3, 1, 0, 3, 2, 3, 0, 1, 3],\n      [3, 2, 0, 1, 2, 1, 0, 2, 3],\n      [3, 2, 0, 1, 3, 1, 0, 2, 3],\n      [3, 2, 0, 2, 1, 2, 0, 2, 3],\n      [3, 2, 0, 3, 1, 3, 0, 2, 3],\n      [1, 2, 1, 0, 3, 0, 1, 2, 1],\n      [1, 3, 1, 0, 2, 0, 1, 3, 1],\n      [2, 1, 2, 0, 3, 0, 2, 1, 2],\n      [2, 3, 2, 0, 1, 0, 2, 3, 2],\n      [3, 1, 3, 0, 2, 0, 3, 1, 3],\n      [3, 2, 3, 0, 1, 0, 3, 2, 3],\n      [1, 2, 3, 1, 2, 1, 3, 2, 1],\n      [1, 2, 3, 1, 3, 1, 3, 2, 1],\n      [1, 2, 3, 2, 1, 2, 3, 2, 1],\n      [1, 2, 3, 2, 3, 2, 3, 2, 1],\n      [1, 3, 2, 1, 2, 1, 2, 3, 1],\n      [1, 3, 2, 1, 3, 1, 2, 3, 1],\n      [1, 3, 2, 3, 1, 3, 2, 3, 1],\n      [1, 3, 2, 3, 2, 3, 2, 3, 1],\n      [2, 1, 3, 1, 2, 1, 3, 1, 2],\n      [2, 1, 3, 1, 3, 1, 3, 1, 2],\n      [2, 1, 3, 2, 1, 2, 3, 1, 2],\n      [2, 1, 3, 2, 3, 2, 3, 1, 2],\n      [2, 3, 1, 2, 1, 2, 1, 3, 2],\n      [2, 3, 1, 2, 3, 2, 1, 3, 2],\n      [2, 3, 1, 3, 1, 3, 1, 3, 2],\n      [2, 3, 1, 3, 2, 3, 1, 3, 2],\n      [3, 1, 2, 1, 2, 1, 2, 1, 3],\n      [3, 1, 2, 1, 3, 1, 2, 1, 3],\n      [3, 1, 2, 3, 1, 3, 2, 1, 3],\n      [3, 1, 2, 3, 2, 3, 2, 1, 3],\n      [3, 2, 1, 2, 1, 2, 1, 2, 3],\n      [3, 2, 1, 2, 3, 2, 1, 2, 3],\n      [3, 2, 1, 3, 1, 3, 1, 2, 3],\n      [3, 2, 1, 3, 2, 3, 1, 2, 3]\n    ]\n  }\n};\n","import { maxMagnitude, lettersToNumbers } from \"./config.js\";\n\nexport const createMagnitudeOptions = start => {\n  let options = [];\n  start = Number(start);\n\n  if (start % 2 === 0) {\n    for (let i = start; i <= maxMagnitude; i += 2) {\n      options.push({ value: i, label: i });\n    }\n  } else {\n    for (let i = start; i <= maxMagnitude; i++) {\n      options.push({ value: i, label: i });\n    }\n  }\n  return options;\n};\n\nexport const createNumberPalindromes = (stripes, magnitude) => {\n  let results = [];\n\n  if (stripes === 1 && magnitude > 0) {\n    results.push([magnitude]);\n  } else if (stripes === 2 && magnitude % 2 === 0 && magnitude > 0) {\n    results.push([magnitude / 2, magnitude / 2]);\n  } else if (2 < stripes && stripes <= magnitude) {\n    for (let i = 1; i <= magnitude / 2; i++) {\n      const middles = createNumberPalindromes(stripes - 2, magnitude - 2 * i);\n      middles.forEach(middle => results.push([i].concat(middle, [i])));\n    }\n  }\n  return results;\n};\n\nexport const convertTo2D = array => {\n  let result = [];\n  let i = 0;\n\n  while (i < array.length) {\n    result.push(array.slice(i, i + 4));\n    i += 4;\n  }\n  return result;\n};\n\nexport const splitter = arr => {\n  return arr.map(arr2 =>\n    arr2.split(\"\").map(letter => lettersToNumbers[letter])\n  );\n};\n","import React, { memo, useState, useEffect, useRef } from \"react\";\nimport Select from \"react-select\";\nimport { FixedSizeGrid as Grid } from \"react-window\";\nimport {\n  SelectContainer,\n  Stripe,\n  Swatch,\n  SwatchContainer,\n  Header,\n  Pattern,\n  PatternContainer,\n  PatternCount,\n  PatternLabel,\n  Button,\n  ButtonContainer,\n  PatternCountContainer,\n  Container,\n  MenuContainer,\n  selectStyles\n} from \"./styles.js\";\nimport {\n  colors,\n  stripeOptions,\n  colorSequences,\n  numbersToLetters\n} from \"./config.js\";\nimport {\n  createMagnitudeOptions,\n  createNumberPalindromes,\n  convertTo2D\n} from \"./helpers.js\";\nimport \"./index.css\";\n\nconst PatternRenderer = memo(props => {\n  const { columnIndex, data, rowIndex, ...otherProps } = props;\n  const currentPattern = data[rowIndex][columnIndex];\n\n  return currentPattern ? (\n    <PatternContainer {...otherProps}>\n      <PatternLabel>{currentPattern.label}</PatternLabel>\n      <Pattern>\n        {currentPattern.pattern.flatMap(({ count, color }) =>\n          new Array(count).fill(<Stripe color={color.value} />)\n        )}\n      </Pattern>\n    </PatternContainer>\n  ) : null;\n});\n\nconst App = () => {\n  const [stripeCount, setStripeCount] = useState(null);\n  const [magnitude, setMagnitude] = useState(null);\n  const [magnitudeOptions, setMagnitudeOptions] = useState(null);\n  const [pickedColors, setPickedColors] = useState([]);\n  const [patterns, setPatterns] = useState([]);\n  const [patternCount, setPatternCount] = useState(0);\n\n  const randomMode = useRef(false);\n\n  useEffect(() => {\n    if (randomMode.current) {\n      createPatterns();\n      randomMode.current = false;\n    }\n  });\n\n  const stripeCountValue = stripeCount ? Number(stripeCount.value) : null;\n  const isColorCountValid =\n    stripeCountValue % 2 === 0\n      ? pickedColors.length > 1 && stripeCountValue >= pickedColors.length\n      : pickedColors.length > 0 && stripeCountValue >= pickedColors.length;\n  const anyChoicesMade = stripeCountValue || magnitude || isColorCountValid;\n  const allChoicesMade = stripeCountValue && magnitude && isColorCountValid;\n\n  const createPatterns = () => {\n    const numberPalindromes = createNumberPalindromes(\n      stripeCountValue,\n      magnitude\n    );\n    const sequences = colorSequences[stripeCountValue][pickedColors.length];\n    const results = [];\n\n    for (let i = 0; i < numberPalindromes.length; i++) {\n      for (let j = 0; j < sequences.length; j++) {\n        let pattern = sequences[j].map(color => {\n          if (color === 0) {\n            return { color: { label: \"white\", value: \"#f6f7f4\" } };\n          } else {\n            return { color: pickedColors[(color - 1).toString()] };\n          }\n        });\n        for (let k = 0; k < numberPalindromes[i].length; k++) {\n          pattern[k][\"count\"] = numberPalindromes[i][k];\n        }\n        results.push({\n          label: `${stripeCountValue}m${magnitude}, ${numberPalindromes[i].join(\n            \"/\"\n          )}, ${sequences[j].map(num => numbersToLetters[num]).join(\"\")}`,\n          pattern\n        });\n      }\n    }\n\n    const converted = convertTo2D(results);\n\n    if (randomMode.current) {\n      setPatternCount(1);\n      setPatterns([[results[Math.floor(Math.random() * results.length)]]]);\n    } else {\n      setPatternCount(results.length);\n      setPatterns(converted);\n    }\n  };\n\n  const updatePickedColors = newColor => {\n    let newPickedColors = pickedColors.map(color => ({ ...color }));\n\n    if (pickedColors.find(color => color.value === newColor.value)) {\n      newPickedColors = pickedColors.filter(\n        color => color.value !== newColor.value\n      );\n    } else {\n      if (\n        pickedColors.length === stripeCountValue ||\n        pickedColors.length === 3\n      ) {\n        newPickedColors.pop();\n      }\n      newPickedColors.push(newColor);\n    }\n\n    setPickedColors(newPickedColors);\n  };\n\n  const reset = () => {\n    setStripeCount(null);\n    setMagnitude(null);\n    setMagnitudeOptions(null);\n    setPickedColors([]);\n    setPatterns([]);\n    setPatternCount(0);\n  };\n\n  const random = () => {\n    const randomStripeCount = Math.floor(Math.random() * 9) + 1;\n    const options = createMagnitudeOptions(randomStripeCount);\n    const colorCount =\n      randomStripeCount % 2 === 0\n        ? 2\n        : Math.floor(Math.random() * Math.min(randomStripeCount, 3)) + 1;\n    let results = [];\n    let i = 0;\n    while (i < colorCount) {\n      const colorIdx = Math.floor(Math.random() * colors.length);\n      if (!results.includes(colors[colorIdx])) {\n        results.push(colors[colorIdx]);\n        i++;\n      }\n    }\n    setStripeCount({ value: randomStripeCount, label: randomStripeCount });\n    setMagnitudeOptions(options);\n    setMagnitude(\n      Number(options[Math.floor(Math.random() * options.length)].value)\n    );\n    setPickedColors(results);\n    randomMode.current = true;\n  };\n\n  return (\n    <Container>\n      <MenuContainer>\n        <SelectContainer>\n          <Header>Stripes</Header>\n          <Select\n            styles={selectStyles}\n            value={stripeCount}\n            options={stripeOptions}\n            onChange={option => {\n              setStripeCount(option);\n              setMagnitude(null);\n              setPickedColors([]);\n              setMagnitudeOptions(createMagnitudeOptions(option.value));\n            }}\n          />\n        </SelectContainer>\n        <SelectContainer>\n          <Header>Magnitude</Header>\n          <Select\n            styles={selectStyles}\n            isDisabled={!magnitudeOptions}\n            options={magnitudeOptions}\n            value={magnitude && { value: magnitude, label: magnitude }}\n            onChange={option => {\n              setMagnitude(Number(option.value));\n            }}\n          />\n        </SelectContainer>\n        <SwatchContainer disabled={!(stripeCountValue && magnitude)}>\n          {colors.map(color => {\n            return (\n              <Swatch\n                key={Math.random()}\n                color={color.value}\n                onClick={() => updatePickedColors(color)}\n                isPicked={\n                  !!pickedColors.find(\n                    pickedColor => pickedColor.value === color.value\n                  )\n                }\n              />\n            );\n          })}\n        </SwatchContainer>\n        <ButtonContainer>\n          <Button onClick={createPatterns} disabled={!allChoicesMade}>\n            Create patterns\n          </Button>\n        </ButtonContainer>\n        <ButtonContainer>\n          <Button onClick={random}>Random pattern</Button>\n        </ButtonContainer>\n        <ButtonContainer>\n          <Button onClick={reset} disabled={!anyChoicesMade}>\n            Reset\n          </Button>\n        </ButtonContainer>\n        <PatternCountContainer>\n          <Header>Patterns generated</Header>\n          <PatternCount>{patternCount}</PatternCount>\n        </PatternCountContainer>\n      </MenuContainer>\n      {patterns.length > 0 && (\n        <Grid\n          itemData={patterns}\n          columnCount={patterns[0].length}\n          rowCount={patterns.length}\n          columnWidth={220}\n          height={550}\n          rowHeight={120}\n          width={900}\n        >\n          {PatternRenderer}\n        </Grid>\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}